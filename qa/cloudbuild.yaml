# Runs on tag of release/* branch
steps:
  # build container
  - name: 'gcr.io/cloud-builders/docker'
    args: ["build", "-t", "gcr.io/oceanic-isotope-199421/github-zmad5306-gl-ui:${TAG_NAME}", "--build-arg", "version=0.0.1-SNAPSHOT", "."]
    
  # Retrieve and decrypt the GitHub Hub configuration. 
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'sh'
    args:
      - '-c'
      - |
        gsutil cp gs://git-hub-key/hub.enc hub.enc

        gcloud kms decrypt \
          --ciphertext-file hub.enc \
          --plaintext-file /config/hub \
          --location global \
          --keyring ${_KMS_KEYRING} \
          --key ${_KMS_KEY}
    volumes:
      - name: 'config'
        path: /config

  # Generate a kubeconfig file for the given GKE cluster.
  - name: 'gcr.io/cloud-builders/kubectl'
    env:
      - 'CLOUDSDK_COMPUTE_ZONE=${_CLOUDSDK_COMPUTE_ZONE}'
      - 'CLOUDSDK_CONTAINER_CLUSTER=${_CLOUDSDK_CONTAINER_CLUSTER}'
      - 'KUBECONFIG=/kube/config'
    entrypoint: 'sh'
    args:
      - '-c'
      - |
        CLUSTER=$$(gcloud config get-value container/cluster)
        PROJECT=$$(gcloud config get-value core/project)
        ZONE=$$(gcloud config get-value compute/zone)
      
        gcloud container clusters get-credentials "$${CLUSTER}" \
          --project "$${PROJECT}" \
          --zone "$${ZONE}"
    volumes:
      - name: 'kube'
        path: /kube

  - name: 'gcr.io/hightowerlabs/hub'
    env:
      - 'HUB_CONFIG=/config/hub'
      - 'KUBECONFIG=/kube/config'
    entrypoint: 'sh'
    args:
      - '-c'
      - |
        ACTIVE_ACCOUNT=$(gcloud auth list --filter=status:ACTIVE --format="value(account)")

        hub config --global credential.https://github.com.helper /usr/local/bin/hub-credential-helper
        hub config --global hub.protocol https
        hub config --global user.email "$${ACTIVE_ACCOUNT}"
        hub config --global user.name "Google Container Builder"

        hub clone "https://github.com/zmad5306/gl-infrastructure-qa.git"

        cd gl-infrastructure-qa

        cat <<EOF > patch.yaml
        spec:
          template:
            spec:
              containers:
                - name: gl-ui
                  image: gcr.io/${PROJECT_ID}/github-zmad5306-gl-ui:${TAG_NAME}
        EOF

        kubectl patch --local -o yaml \
          -f kubernetes/deployments/gl-ui-deployment.yaml \
          -p "$(cat patch.yaml)" \
          > gl-ui-deployment.yaml

        mv gl-ui-deployment.yaml kubernetes/deployments/gl-ui-deployment.yaml

        hub add kubernetes/deployments/gl-ui-deployment.yaml
              
        hub commit -F- <<EOF
        Update the gl-ui-deployment application

        This commit updates the gl-ui deployment container image to:

            gcr.io/${PROJECT_ID}/github-zmad5306-gl-ui:${TAG_NAME}.

        Build ID: ${BUILD_ID}
        EOF

        hub push origin master
    volumes:
      - name: 'config'
        path: /config
      - name: 'kube'
        path: /kube
        
  - name: 'gcr.io/hightowerlabs/hub'
    env:
      - 'HUB_CONFIG=/config/hub'
      - 'KUBECONFIG=/kube/config'
    entrypoint: 'sh'
    args:
      - '-c'
      - |
        ACTIVE_ACCOUNT=$(gcloud auth list --filter=status:ACTIVE --format="value(account)")

        hub config --global credential.https://github.com.helper /usr/local/bin/hub-credential-helper
        hub config --global hub.protocol https
        hub config --global user.email "$${ACTIVE_ACCOUNT}"
        hub config --global user.name "Google Container Builder"
        
        hub clone "https://github.com/zmad5306/gl-infrastructure-qa.git"

        hub clone "https://github.com/zmad5306/gl-infrastructure-production.git"
        
        # Extract the container image from the qa ui deployment configuration file.
        CONTAINER_IMAGE=$(kubectl apply --dry-run \
           -f gl-infrastructure-qa/kubernetes/deployments/gl-ui-deployment.yaml \
           -o jsonpath='{.spec.template.spec.containers[?(@.name == "gl-ui")].image}')

        cat <<EOF > patch.yaml
        spec:
          template:
            spec:
              containers:
                - name: gl-ui
                  image: $${CONTAINER_IMAGE}
        EOF

        kubectl patch --local -o yaml \
          -f gl-infrastructure-production/kubernetes/deployments/gl-ui-deployment.yaml \
          -p "$(cat patch.yaml)" \
          > gl-ui-deployment.yaml

        mv gl-ui-deployment.yaml gl-infrastructure-production/kubernetes/deployments/gl-ui-deployment.yaml

        # Change to the gl-infrastructure-production directory
        # commit the local changes, then issue a pull request.
        cd gl-infrastructure-production

        git checkout -b update-deployment-${BUILD_ID}

        hub add kubernetes/deployments/gl-ui-deployment.yaml
 
        hub commit -F- <<EOF
        Update the gl-ui-deployment deployment

        This commit updates the gl-ui-deployment container image to:

            $${CONTAINER_IMAGE}

        Build ID: ${BUILD_ID}
        EOF

        hub push origin update-deployment-${BUILD_ID}

        hub pull-request -F- <<EOF
        Update the gl-ui deployment

        This commit updates the gl-ui deployment container image to:

            $${CONTAINER_IMAGE}

        Build ID: ${BUILD_ID}
        EOF
    volumes:
      - name: 'config'
        path: /config
      - name: 'kube'
        path: /kube     

images:
  - 'gcr.io/${PROJECT_ID}/github-zmad5306-gl-ui:${TAG_NAME}'